@model Shelterer.ViewModels.ObjectTypeIndexData
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Object types";
}

<h2>Object types</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "ObjectType", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" class="btn btn-default" />
    </p>
}
@using (Html.BeginForm("Index", "ObjectType", FormMethod.Get))
{
        @Html.TextBox("currentFilter", "", new { type = "hidden" })
        <input type="submit" value="Clear" class="btn btn-default" />
}

<div class="table-responsive">
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Object types", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>Amount</th>
            <th></th>
        </tr>

        @foreach (var item in Model.ObjectTypes)
        {
            string selectedRow = "";
            if (item.Id == ViewBag.ObjectTypeId)
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.ObjectTypeName)
                </td>
                <td>
                    @item.Shelters.Count.ToString()
                </td>
                <td>
                    @Html.ActionLink("Select", "Index", new { id = item.Id, page = Model.ObjectTypes.PageNumber, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }) |
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
</div>
<br />
Page @(Model.ObjectTypes.PageCount < Model.ObjectTypes.PageNumber ? 0 : Model.ObjectTypes.PageNumber) of @Model.ObjectTypes.PageCount

@Html.PagedListPager(Model.ObjectTypes, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, id = ViewBag.ObjectTypeId }))

@if (Model.Shelters != null)
{
    using (Html.BeginForm("Index", "ObjectType", new { id = ""}, FormMethod.Get))
    {
        <input type="hidden" name="page" value="@Model.ObjectTypes.PageNumber">
        <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort">
        <input type="hidden" name="currentFilter" value="@ViewBag.CurrentFilter">
        <input type="submit" value="Hide" class="btn btn-default" />
    }
    <h3>@ViewBag.ObjectTypeName type shelters</h3>
    ViewBag.AdditionalInfo = "location";
    @Html.Partial("~/Views/Shelter/PartialIndex.cshtml", Model.Shelters)
}

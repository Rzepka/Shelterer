@model Shelterer.Models.Shelter

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script type="text/javascript" src="/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="/Scripts/CascadeDropdown.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Shelter</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObjectTypeId, "Object Type", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ObjectTypeId", String.Empty)
                @Html.ValidationMessageFor(model => model.ObjectTypeId)
                <a href="/ObjectType/Create" data-toggle="modal" data-target="#remoteModalObjectType" class="btn btn-default">Add new</a>
            </div>
        </div>

<div class="form-group">
            @Html.LabelFor(model => model.Altitude, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Altitude)
                @Html.ValidationMessageFor(model => model.Altitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude)
                @Html.ValidationMessageFor(model => model.Latitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude)
                @Html.ValidationMessageFor(model => model.Longitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, "Region", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("RegionId", String.Empty)*@
                @Html.DropDownListFor(model => model.RegionId,
                    new SelectList(ViewBag.RegionId as System.Collections.IEnumerable, "Id", "RegionName"),
                    "Select Region", new { id = "ddlRegions" })
                @Html.ValidationMessageFor(model => model.RegionId)
                <a href="/Region/Create" data-toggle="modal" data-target="#remoteModalRegion" class="btn btn-default">Add new</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MountainRangeId, "Mountain Range", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("MountainRangeId", String.Empty)*@
                @Html.DropDownListFor(model => model.MountainRangeId,
                    new SelectList(ViewBag.MountainRangeId as System.Collections.IEnumerable, "Id", "MountainRangeName"),
                    "Select Mountain Range", new { id = "ddlRanges" })
                @Html.ValidationMessageFor(model => model.MountainRangeId)
                <a href="/MountainRange/Create" data-toggle="modal" data-target="#remoteModalMountainRange" class="btn btn-default">Add new</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Visited, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Visited)
                @Html.ValidationMessageFor(model => model.Visited)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity)
                @Html.ValidationMessageFor(model => model.Capacity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner)
                @Html.ValidationMessageFor(model => model.Owner)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opening, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opening)
                @Html.ValidationMessageFor(model => model.Opening)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TechnicalCondition, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TechnicalCondition)
                @Html.ValidationMessageFor(model => model.TechnicalCondition)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks)
                @Html.ValidationMessageFor(model => model.Remarks)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaterAccess, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WaterAccess)
                @Html.ValidationMessageFor(model => model.WaterAccess)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fireplace, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fireplace)
                @Html.ValidationMessageFor(model => model.Fireplace)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<!-- Modal -->
<div class="modal fade" id="remoteModalObjectType" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>
<!-- /.modal -->
<!-- Modal -->
<div class="modal fade" id="remoteModalRegion" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>
<!-- /.modal -->
<!-- Modal -->
<div class="modal fade" id="remoteModalMountainRange" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>
<!-- /.modal -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
